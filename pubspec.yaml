name: takeittt
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.


dependencies:
  flutter:
    sdk: flutter

  # File and Storage Management
  path_provider:
  get_storage: ^2.1.1
  flutter_dotenv:
  cached_network_image:

  # Networking
  http:
  supabase_flutter:

  # Firebase Services
  firebase_core:
  firebase_auth:
  firebase_messaging:
  firebase_storage:
  firebase_database:
  firebase_analytics:
  firebase_crashlytics:
  cloud_firestore:
  fluttertoast:

  # UI and Icons
  google_nav_bar:
  font_awesome_flutter:
  google_fonts:
  cupertino_icons:
  shimmer:
  fl_chart:
  getwidget:
  gradient_icon:
  gradient_circular_progress_indicator:
  liquid_progress_indicator_v2:

  # State Management & Utilities
  get:
  random_string:
  intl:

  # User Authentication
  google_sign_in:

  # Form & Validation
  form_validator:

  # Gesture & Interaction
  gesture_x_detector:

  # Media & Video
  image_picker:
  camera:
  video_player:

  # Real-time Communication
  agora_rtc_engine:

  # Permissions & System Features
  permission_handler:
  url_launcher:
  speech_to_text:

  #Google Map
  google_maps_flutter:

  #cache manager
  flutter_cache_manager:

  #Maps
  flutter_map:
  flutter_map_location_marker:
  location:
  latlong2:
  syncfusion_flutter_maps:

  #sharing feature clipboard
  share_plus:
  lucide_icons: ^0.257.0
  flutter_rating_bar: ^4.0.1

  #Tabbar packages
  bubble_tab_indicator:
  curved_navigation_bar:
  motion_tab_bar:

dev_dependencies:
  flutter_test:
    sdk: flutter

flutter_launcher_icons:
  android: true
  ios: true
  image_path: "lib/Assets/Takeeit.png"
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - lib/Assets/cosmetic.png
    - lib/Assets/mac.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
